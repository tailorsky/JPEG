1.Реализовать следующие функции:
    • Перехода в цветовое пространство YCbCr из RGB
    • Даунсэмплинга матрицы цветового канала.
    • Разбиения изображения на блоки NxN. Если изображение делится на нецелое количество блоков, округлить их количество по вертикали/горизонтали вверх и 
    заполнить неполные блоки выбранным значением (например, нулем) 
    • Прямого и обратного DCT-II 2D для блока размера NxN. Удостовериться в обратимости.
    • Изменения матрицы квантования в зависимости от уровня сжатия.
    • Квантования и обратного преобразования матрицы ДКТ по заданной матрице квантования
    • Зигзаг обхода матрицы NxN
    • Разностного кодирования DC коэффициентов
    • Переменного кодирования разностей DC и AC коэффициентов.
    • RLE кодирования AC коэффициентов 
    • Кодирования разностей  DC коэффициентов и последовательностей  Run/Size  по таблице кодов Хаффмана и упаковки результата в байтовую строку.

2.Подготовить тестовые данные.
    • Lenna.png (https://en.wikipedia.org/wiki/Lenna#/media/File:Lenna_(test_image).png)
    • Нетривиальное цветное изображение размера 2048 на 2048 высокого качества. 

3.Получить версии тестовых изображений в grayscale, чб с дизерингом, чб без дизеринга

4.На основе функций из пункта 3 реализовать JPEG-инспирированный компрессор со следующими этапами выполнения:
    • Переход в цветовое пространство YCbCr
    • Даунсэмплинг каналов Cb и Сr c коэффициентом 2 по каждой оси. 
    • Разбиение на блоки (размер по умолчанию 8x8).
    • Применение двумерного дискретного косинусного преобразования (DCT-II 2D)
    • Квантование коэффициентов DCT по матрице квантования (143 стр. ITU-T81)  и уровню качества
    • Разностное кодирование DC коэффициентов
    • Переменное кодирование разностей DC коэффициентов и AC коэффициентов
    • RLE AC коэффициентов
    • Энтропийное кодирование табличными кодами Хаффмана (149-157 стр. ITU-T81, при желании использовать готовые спецификации таблицы из K.3.3)

5.Записать в файл в получившуюся байтовую строку и все необходимые метаданные (размер изображения, матрицы квантования, коды Хаффмана и тд). 
6.Реализовать соответствующий декомпрессор. Удостовериться в корректной декомпрессии.
7.Для каждого изображения из пунктов 2-3 построить график зависимости размера сжатого от файла от коэффициента качества сжатия (шаг коэффициента не более 5)
8.Сжать тестовые изображения с уровнем качества 0, 20, 40, 60, 80, 100. Произвести декомпрессию, приложить получившиеся изображения к отчету.


Лабораторная работа №2
Отчет должен состоять из:
• Теоретической части, в которой описываются реализованные алгоритмы
• Практической части, в которой демонстрируются результаты компрессии при различных уровнях сжатия для тестовых изображений. 
• Приложения с кодом и ссылки на гитхаб. Вместе с кодом в репозитории должны находиться исходные тестовые файлы, их кодированная и декодированная.